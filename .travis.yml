language: java
install: skip

dist: trusty

jdk:
  - oraclejdk8

sudo: false

after_success:
  - bash <(curl -s https://codecov.io/bash)

addons:
  apt:
    packages:
      - oracle-java8-installer

before_script:
  - ./cc-test-reporter before-build

script:
  - ./gradlew googleJavaFormat
  - ./gradlew build
  - ./gradlew test -Dsonar.host.url=https://sonar.josdem.io

  ################ CODE CLIMATE #########################3
# Cache gems
#cache:
#  bundler: true
#  directories:
#    - node_modules

addons:
  chrome: stable
  #firefox: latest

env:
  global:
    CC_TEST_REPORTER_ID=ABC123

before_install:                        
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  #- export DISPLAY=:99.0                # Display number for xvfb (for headless browser testing)
  #- sh -e /etc/init.d/xvfb start        # Start xvfb (for headless browser testing)
        

# Pipe the coverage data to Code Climate
after_script:
  - ./cc-test-reporter format-coverage -t simplecov -o coverage/codeclimate.backend.json coverage/backend/.resultset.json # Format backend coverage
  - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.frontend.json coverage/frontend/lcov.info  # Format frontend coverage
  - ./cc-test-reporter sum-coverage coverage/codeclimate.*.json -p 2                  # Sum both coverage parts into coverage/codeclimate.json
  - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then ./cc-test-reporter upload-coverage; fi  # Upload coverage/codeclimate.json
  - ./cc-test-reporter after-build


##################################3######################################